= form_for @user, html: { class: 'py-4 form needs-validation', novalidate: true } do |f|
  - if @user.errors.any?
    #error_explanation
      %strong= I18n.t('activerecord.errors.models.user.error_flash')
      %ul
        - @user.errors.full_messages.each do |message|
          %li= message

  .form-row
    .col-2
      = f.label :username
    .col-4
      = f.text_field :username, class: 'form-control mb-4', required: true
      .invalid-feedback
        = I18n.t('activerecord.errors.models.user.attributes.username.form')
  .form-row
    .col-2
      = f.label :email
    .col-4
      = f.email_field :email, class: 'form-control mb-4', required: true
      .invalid-feedback
        = I18n.t('activerecord.errors.models.user.attributes.email.form')
  - unless @user.persisted?
    = render 'predefined_roles', f: f

  - if can?(:update, @user) && @user.persisted?
    = render 'roles_and_security', f: f

= render 'password_form'
